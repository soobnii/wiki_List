도커허브 & 깃허브 가입
https://hub.docker.com/
soobnii

1. 사전 요구 사항
Intel VT-x 또는 AMD AMD-v 활성화 및 지원 여부 확인

cmd.exe (관리자 권한으로 실행)
systeminfo

다음과 같은 출력이 확인되어야 함

Hyper-V Requirements:
    VM Monitor Mode Extensions: Yes
    Virtualization Enabled In Firmware: Yes
    Second Level Address Translation: Yes
    Data Execution Prevention Available: Yes

2. 지원되는 하이파바이저
VirtualBox(권장), Hyper-V

3. Chocolatey 설치 (package manager for Windows)
choco

cmd.exe
@"%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"

choco로 설치한 패키지 목록 보기
choco list --local-only

4. VirtualBox 설치
virtualbox

cmd.exe
choco install -y virtualbox virtualbox.extensionpack

5. Docker 컴포넌트 설치
docker

cmd.exe
choco install -y docker-cli docker-machine docker-compose

(옵션) 6. Cmder 설치 (Portable console emulator for Windows)
cmder

cmd.exe
choco install -y cmder

(옵션) 7. Virtual Studio Code 설치 (Text Editor)
vscode

cmd.exe
choco install -y vscode

8. docker Server 생성
docker-machine

cmd.exe
vm 생성 (생성하는 vm의 이름은 manager)
docker-machine create --driver virtualbox manager
or
docker-machine create --driver virtualbox --virtualbox-cpu-count "2" --virtualbox-memory "4096" manager

vm 목록 확인
docker-machine ls

vm 시작/중지
docker-machine start/stop manager

set up the environment for the Docker client
docker-machine env manager

다음과 같은 출력라인 확인후 copy&paste

REM Run this command to configure your shell:
REM @FOR /f "tokens=*" %i IN ('"C:\ProgramData\chocolatey\lib\docker-machine\bin\docker-machine.exe" env manager') DO @%i

9. docker 클라이언트/서버 버전 확인
cmd.exe
docker version


---------------------------------------------------------------------

https://hub.docker.com/
soobnii

#어플리케이션을 실행하려면 container 로 만들어야 함 
#docker hub 에서 레지스트리 확인 할 수 있음 


#명령어로 검색 
sudo docker search tomcat


---ssh
## 용량 조회
du -sh image
du -sh overlay2 

wget -O- -q http://192.168.99.102


import socket

#socket 서비스 제공 
with socket.socket() as s:
  s.bind(("0.0.0.0",12345)) #12345 포트 열도록 만듦
  s.listen()
  print("server is started")
  conn, addr = s.accept
  # conn : 클라이언트와 통신할 소켓
  # addr : 클라이언트의 정보가 들어있음
  with conn:
    print("Connected by", addr)
    while True:
      data = conn.recv(1024)  # data 에 1024 byte 받아서 저장
      if not data: break  # data 에 내용이 있으면
      conn.sendall(data)  #data를 다시 클라이언트에게 돌려줌


# nc 127.0.0.1 12345
---------------------설치 후--------------------------
docker-machine start manager
docker-machine ssh manager
sudo su 

## 태그 변경
docker tag echo_test:latest soobnii/echo_test:v3.7

## hub.docker.com 에 업로드
docker push soobnii/echo_test

## 이미지 전체 삭제
docker rmi $(docker images -q) -f   # -f : 강제 삭제

## 이미지 실행 (-t: tag  / -d : detached mode 백그라운드모드)
sudo docker run -t -p 12345:12345 --name et --rm soobnii/echo_test:v3.7

## 다른탭에서 접속
docker@manager:~$ nc 127.0.0.1 12345
 test12345
 test12345

## 접속시 기존 탭에서 다음이 출력
server is started
Connected by ('172.17.0.1', 36820)  #172.17.0.1 도커 네트워크 ip 

## 히스토리 확인  (해당 이미지를 만드는 동안 실행한 도커 명령어)
docker history soobnii/echo_test:v3.7

==========================================================================
## 볼륨 마운트 해서 서비스 구축 (docker run -v <호스트경로>:<컨테이너 내 경로>:<권한>
## 권한 :ro-읽기전용, rw-읽기 및 쓰기
docker run -d -p 80:80 --rm -v /var/www:/usr/share/nginx/html:ro nginx\

## 포트 중복 에러 시, 도커 전체 멈추기 
docker stop $(docker ps -a -q)

## 중지된 것 포함 모든 컨테이너 출력 (ls == ps), 현재 구동중인것만 : docker ps 
docker ps -a

## 다른 탭에서~
sudo su
cd /var/www
## 비어있는 경로에 index.html로 출력문 보내기(echo) 
echo test1234 > index.html
 
## 접속 확인
curl https://localhost:80
 test1234

## 폴더 생성
root@manager:/home/docker# mkdir jupyternotebook
root@manager:/home/docker# cd jupyternotebook

## 마운트 (https://hub.docker.com/r/lionaruc/jupyternotebook 참조)
## 기본포트 8888 , 환경변수(요즘은 주피터노트북보다 주피터랩을 더 사용 -> yes -> 열 때 랩으로 열림)
## -v PWD : 현재 디렉토리에 마운트 시키는 것 / 이하 경로 : 원래 지정되어 있는 것 / 9b~ hash 값
## 이미지 jupyter/datascience-notebook 
docker run --rm -p 8080:8888 -e JUPYTER_ENABLE_LAB=yes -v "$PWD":/home/jupyter/jovyan/work:rw jupyter/datascience-notebook:9b06df75e445

##아래와 같은 에러 발생시 도커머신 재구동   
#Error response from daemon: Get https://registry-1.docker.io/v2/: dial tcp: lookup registry-1.docker.io on 10.0.2.3:53: read udp 10.0.2.15:51254->10.0.2.3:53: i/o timeout.
#docker-machine restart manager

--------------------------------------------------------------------
실습용 코드
docker-cli & Dockerfile로 스프링부트 이미지 빌드하기
https://github.com/moricom2/hello-rest.git

docker-maven-plugin으로 전자정부프레임워크 이미지 빌드하기
https://github.com/moricom2/egovframe-sample.git

CI서버
https://github.com/moricom2/jenkins.git

(추가) 머신의 리소스 수정
docker-machine stop manager
VBoxManage modifyvm manager --cpus 2
VBoxManage modifyvm manager --memory 4096
docker-machine start manager
